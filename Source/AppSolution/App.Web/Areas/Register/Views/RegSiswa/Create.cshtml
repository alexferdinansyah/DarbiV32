@model App.Web.Areas.Register.Models.CreateRegSiswa

@{
    ViewBag.Title = "Registrasi Siswa Baru";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>@ViewBag.Title</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Nickname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nickname, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Nickname, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Nisn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nisn, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Nisn, "", new { @class = "text-danger" })
        </div>
    </div>
    @*Buat Radio Button Untuk Sex*@

    <div class="form-group">
        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control", AutoComplete="off" } })
        @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })*@
            <div class="checkbox">
                Laki Laki @Html.RadioButtonFor(model => model.Sex, "Laki Laki")
                Perempuan @Html.RadioButtonFor(model => model.Sex, "Perempuan")
            </div>
            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Pob, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Pob, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Pob, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NamaAyah, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NamaAyah, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.NamaAyah, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NamaIbu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NamaIbu, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.NamaIbu, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PekerjaanAyah, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PekerjaanAyah, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.PekerjaanAyah, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PekerjaanIbu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PekerjaanIbu, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.PekerjaanIbu, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NoTelpAyah, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NoTelpAyah, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.NoTelpAyah, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NoTelpIbu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NoTelpIbu, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.NoTelpIbu, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EmailOrtu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmailOrtu, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.EmailOrtu, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Alamat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Alamat, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Alamat, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Kota, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Kota, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Kota, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Provinsi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Provinsi, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Provinsi, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.KodePos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KodePos, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.KodePos, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Negara, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Negara, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Negara, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Anakke, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Anakke, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Anakke, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Agama, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Agama, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Agama, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Suku, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Suku, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Suku, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Kewarganegaraan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Kewarganegaraan, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Kewarganegaraan, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TinggiBadan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TinggiBadan, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.TinggiBadan, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BeratBadan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BeratBadan, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.BeratBadan, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Goldar, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Goldar, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Goldar, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.KontakSiswa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KontakSiswa, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.KontakSiswa, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SekolahAsal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SekolahAsal, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.SekolahAsal, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StatSekolahAsal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StatSekolahAsal, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.StatSekolahAsal, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.JarakRumahSekolah, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JarakRumahSekolah, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.JarakRumahSekolah, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.KatSpp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.KatSpp, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.KatSpp, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2" id="tipediskon">
            @Html.DropDownList("Disc")
        </div>
        <div class="col-md-2" id="nomdiskon">
            @Html.EditorFor(model => model.NomDisc, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.NomDisc, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.totaldisc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.totaldisc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.totaldisc, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.TingkatId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TingkatId, Model.Tingkats(), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TingkatId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PerDaftar, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MonthItem")
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Years", new SelectList(ViewBag.Years as System.Collections.IEnumerable, Model.Year))
            @Html.ValidationMessageFor(model => model.Year)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Tahapsatu, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tahapsatu, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Tahapsatu, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Tahapdua, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tahapdua, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.Tahapdua, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.KatAdm, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.KatAdm, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.KatAdm, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2" id="tipediskonadm">
            @Html.DropDownList("DiscAdm")
        </div>
        <div class="col-md-2" id="nomdiskonadm">
            @Html.EditorFor(model => model.NomDiscAdm, new { htmlAttributes = new { @class = "form-control", AutoComplete = "off" } })
            @Html.ValidationMessageFor(model => model.NomDiscAdm, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.PerDaftar)
    @Html.HiddenFor(model => model.Year)
    @Html.HiddenFor(model => model.TypeDisc)
    @Html.HiddenFor(model => model.TypeDiscAdm)
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document).ready(function () {
        var Tipedis = document.getElementById("TypeDisc");
        $('#Disc').change(function () {
            var e = document.getElementById("Disc");
            var strUser = e.options[e.selectedIndex].text;
            Tipedis.value = strUser;
        });
        var Periode = document.getElementById("PerDaftar");
        $('#MonthItem').change(function () {
            var e = document.getElementById("MonthItem");
            var strUser = e.options[e.selectedIndex].text;
            //alert(strUser);
            Periode.value = strUser;
        });
        $('#nomdiskon').change(function () {
            if (document.getElementById("TypeDisc").value == 'Rp') {
                var e = document.getElementById("NomDisc").value;
                var prsE = parseInt(e);
                if (!/\D/.test(e)) {
                    // alert("number");
                }
                else {
                    alert("number only");
                    document.getElementById("NomDisc").value = "";
                }
            }
            else if (document.getElementById("TypeDisc").value == '%') {
                var e = document.getElementById("NomDisc").value;

                if (!/\D/.test(e)) {
                    var prsE = parseInt(e);
                    if (prsE >= 0 && prsE <= 100) {
                        alert("percentage accepted");
                    }
                    else {
                        alert("percentage not accepted");
                        document.getElementById("NomDisc").value = "";
                    }

                }
                else {
                    alert("number only");
                    document.getElementById("NomDisc").value = "";
                }
            }
            else {
                alert("not number");
            }
        });
        var Tahun = document.getElementById("Year");
        $('#Years').change(function () {
            var e = document.getElementById("Years");
            var strUser = e.options[e.selectedIndex].text;
            //alert(strUser);
            Tahun.value = strUser;
        });

        //Tipe diskon Biaya Masuk
        var Disadm = document.getElementById("TypeDiscAdm")
        $('#DiscAdm').change(function () {
            var e = document.getElementById("DiscAdm");
            var strUser = e.options[e.selectedIndex].text;
            //alert(strUser)
            Disadm.value = strUser;
        });
        $('#nomdiskonadm').change(function () {
            if (document.getElementById("TypeDiscAdm").value == 'Rp') {
                var e = document.getElementById("NomDiscAdm").value;
                var prsE = parseInt(e);
                if (!/\D/.test(e)) {
                    //alert("number");
                }
                else {
                    alert("number only");
                    document.getElementById("NomDiscAdm").value = "";
                }
            }
            else if (document.getElementById("TypeDiscAdm").value == '%') {
                var e = document.getElementById("NomDiscAdm").value;

                if (!/\D/.test(e)) {
                    var prsE = parseInt(e);
                    if (prsE >= 0 && prsE <= 100) {
                        alert("percentage accepted");
                    }
                    else {
                        alert("percentage not accepted");
                        document.getElementById("NomDiscAdm").value = "";
                    }

                }
                else {
                    alert("number only");
                    document.getElementById("NomDiscAdm").value = "";
                }
            }
            else {
                alert("not number");
            }
        });

    });

</script>
